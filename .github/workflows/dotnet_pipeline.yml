name: dotnet pipeline

on:
  workflow_call:
    inputs:
      repository:
        description: The owner and repository name
        required: false
        type: string
        default: ${{ github.repository }}
      base_ref:
        description: The branch or tag ref or commit SHA that be base code.
        required: false
        type: string
        default: ${{ github.base_ref || 'main' }}
      target_ref:
        description: The branch or tag ref or commit SHA that will be merged to base code.
        required: false
        type: string
        default: ${{ github.head_ref || github.ref_name }}
      application_name:
        description: Name of application
        required: true
        type: string
      code_language:
        description: The program language of this repository
        required: true
        type: string
      dotnet_version:
        description: The version of .NET Core SDK
        required: false
        type: string
        default: "6.0"
      dotnet_project_path:
        description: The path of .NET Core project
        required: true
        type: string
      dotnet_test_enabled:
        description: Enable test
        required: false
        type: boolean
        default: false
      dotnet_test_args:
        description: Arguments for test
        required: false
        type: string
        default: "--configuration Release --no-build --no-restore --verbosity normal"
      dotnet_migration_enabled:
        description: Enable migration
        required: false
        type: boolean
        default: false

    secrets:
      aws_access_key_id:
        description: AWS access key ID
        required: true
      aws_secret_access_key:
        description: AWS secret access key
        required: true

jobs:
  test:
    if: |
      github.event_name == 'pull_request' &&
      contains(fromJSON('["ready to test", "ready to deploy"]'), github.event.label.name)
    runs-on: ubuntu-latest
    steps:
      - name: Test
        uses: jiw-kittipong/github-action-workflows/language/dotnet/test@main
        if: ${{ inputs.dotnet_test_enabled == true }}
        with:
          dotnet_version: ${{ inputs.dotnet_version }}
          dotnet_project_path: ${{ inputs.dotnet_project_path }}
          dotnet_test_args: ${{ inputs.dotnet_test_args }}

  build:
    if: |
      contains(fromJSON('["ready to test", "ready to deploy"]'), github.event.label.name) && 
      github.event.pull_request.merged
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.step-build.outputs.image_name }}
      image_tag: ${{ steps.step-build.outputs.image_tag }}
    needs: [ test ]
    steps:
      - name: Build
        id: step-build
        uses: jiw-kittipong/github-action-workflows/language/dotnet/build@main
        with:
          target_ref: ${{ inputs.target_ref }}
          application_name: ${{ inputs.application_name }}
          dotnet_version: ${{ inputs.dotnet_version }}
          dotnet_project_path: ${{ inputs.dotnet_project_path }}
          aws_access_key_id: ${{ secrets.aws_access_key_id }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key }}

  migration:
    if: inputs.dotnet_migration_enabled == true
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Migration
        uses: jiw-kittipong/github-action-workflows/language/dotnet/migration@main
        if: ${{ inputs.dotnet_migration_enabled == true }}
        with:
          target_ref: ${{ inputs.target_ref }}
          application_name: ${{ inputs.application_name }}
          dotnet_version: ${{ inputs.dotnet_version }}
          dotnet_project_path: ${{ inputs.dotnet_project_path }}
          dotnet_migration_args: ${{ inputs.dotnet_migration_args }}

  deploy:
    if: |
      always() &&
      (needs.migration.result == 'success' || needs.migration.result == 'skipped')
    runs-on: ubuntu-latest
    needs: [ build, migration ]
    steps:
      - name: Deploy
        uses: jiw-kittipong/github-action-workflows/deploy@main
        with:
          version: "${{ needs.build.outputs.image_name }}:${{ needs.build.outputs.image_tag }}"
