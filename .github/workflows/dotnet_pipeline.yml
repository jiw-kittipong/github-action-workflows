name: dotnet pipeline

on:
  pull_request:
    tags:
      - ready to test
      - ready to deploy
      - api
      - worker
#  merge:
#    branches:
#      - main
#      - develop

  workflow_call:
    inputs:
      repository:
        description: The owner and repository name
        required: false
        type: string
        default: ${{ github.repository }}
      base_ref:
        description: The branch or tag ref or commit SHA that be base code.
        required: false
        type: string
        default: ${{ github.base_ref || 'main' }}
      target_ref:
        description: The branch or tag ref or commit SHA that will be merged to base code.
        required: false
        type: string
        default: ${{ github.head_ref || github.ref_name }}
      application_name:
        description: Name of application
        required: true
        type: string
      code_language:
        description: The program language of this repository
        required: true
        type: string
      dotnet_version:
        description: The version of .NET Core SDK
        required: false
        type: string
        default: "6.0"
      dotnet_project_path:
        description: The path of .NET Core project
        required: true
        type: string
      dotnet_test_enabled:
        description: Enable test
        required: false
        type: boolean
        default: false
      dotnet_test_args:
        description: Arguments for test
        required: false
        type: string
        default: "--configuration Release --no-build --no-restore --verbosity normal"
      dotnet_migration_enabled:
        description: Enable migration
        required: false
        type: boolean
        default: false

    secrets:
      aws_access_key_id:
        description: AWS access key ID
        required: true
      aws_secret_access_key:
        description: AWS secret access key
        required: true

jobs:
  test:
#    if: ${{ github.event.label.name == 'ready to test' }}
    runs-on: ubuntu-latest
    steps:
      - name: Test
        uses: jiw-kittipong/github-action-workflows/language/dotnet/test@main
        if: ${{ inputs.dotnet_test_enabled == true }}
        with:
          dotnet_version: ${{ inputs.dotnet_version }}
          dotnet_project_path: ${{ inputs.dotnet_project_path }}
          dotnet_test_args: ${{ inputs.dotnet_test_args }}

  build:
#    if: ${{ github.event.label.name == 'ready to test' }}
    outputs:
      image_name: ${{ steps.build-image.outputs.image_name }}
      image_tag: ${{ steps.build-image.outputs.image_tag }}
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Build
        id: build-image
        uses: jiw-kittipong/github-action-workflows/language/dotnet/build@main
        with:
          target_ref: ${{ inputs.target_ref }}
          application_name: ${{ inputs.application_name }}
          dotnet_version: ${{ inputs.dotnet_version }}
          dotnet_project_path: ${{ inputs.dotnet_project_path }}
          aws_access_key_id: ${{ secrets.aws_access_key_id }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key }}

  hello:
    steps:
      - name: Hello
        shell: bash
        run: echo "Hello, ${{ steps.build.outputs.image_name }}:${{ steps.build.outputs.image_tag }}"

#  migration:
#    if: ${{ inputs.dotnet_migration_enabled == true }}
#    runs-on: ubuntu-latest
#    needs: [ build ]
#    steps:
#      - name: Migration
#        uses: jiw-kittipong/github-action-workflows/language/dotnet/migration@main
#        if: ${{ inputs.dotnet_migration_enabled == true }}
#        with:
#          target_ref: ${{ inputs.target_ref }}
#          application_name: ${{ inputs.application_name }}
#          dotnet_version: ${{ inputs.dotnet_version }}
#          dotnet_project_path: ${{ inputs.dotnet_project_path }}
#          dotnet_migration_args: ${{ inputs.dotnet_migration_args }}
#
#  deploy:
#    if: |
#      always() &&
#      (needs.migration.result == 'success' || needs.migration.result == 'skipped')
#    runs-on: ubuntu-latest
#    needs: [ migration ]
#    steps:
#      - name: Deploy
#        uses: jiw-kittipong/github-action-workflows/deploy@main
#        with:
#          version: ${{ build.outputs.image_tag }}
